trigger:
  branches:
    include:
      - main
      - feature/*

pool:
  name: Jasus

variables:
  svc: 'newpipeline'  
  subsid: 'c69268aa-c88b-494c-aa80-775984104d2a'

stages:
  - stage: planning
    displayName: 'Terraform Plan Stage'
    condition: or(eq(variables['Build.SourceBranchName'], 'main'), startsWith(variables['Build.SourceBranchName'], 'feature/'))
    jobs:
      - job: planning
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: latest

          - task: TerraformTask@5
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendAzureRmUseEntraIdForAuthentication: false
              backendServiceArm: $(svc)
              backendAzureRmOverrideSubscriptionID: $(subsid)
              backendAzureRmResourceGroupName: 'rg-gunjan-cicd'
              backendAzureRmStorageAccountName: 'xyzabcdefgh'
              backendAzureRmContainerName: 'brijesh1'
              backendAzureRmKey: 'raman.tfstate'

          - task: TerraformTask@5
            displayName: 'Terraform Plan'
            inputs:
              provider: azurerm
              command: plan
              environmentServiceNameAzureRM: '$(svc)'

  - stage: apply
    displayName: 'Terraform Apply Stage'
    dependsOn: planning
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: latest

          - task: TerraformTask@5
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendAzureRmUseEntraIdForAuthentication: false
              backendServiceArm: $(svc)
              backendAzureRmOverrideSubscriptionID: $(subsid)
              backendAzureRmResourceGroupName: 'rg-gunjan-cicd'
              backendAzureRmStorageAccountName: 'xyzabcdefgh'
              backendAzureRmContainerName: 'brijesh1'
              backendAzureRmKey: 'raman.tfstate'

          - task: TerraformTask@5
            displayName: 'Terraform Apply'
            inputs:
              provider: azurerm
              command: apply
              environmentServiceNameAzureRM: '$(svc)'
              commandOptions: '-auto-approve'
